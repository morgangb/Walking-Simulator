Snow Deformation
By David King

---OVERVIEW---

This project is my first attempt at a mesh deformation pipeline after I was completely blown away by Rockstar's incredible snow and mud deformation tech in Red Dead Redemption 2. My implementation utilizes a modified version of Batman: Arkham Origins' snow deformation. This likely is not how Rockstar handled their snow deformation, but as a novice when it comes to shaders, I chose the most well documented version. I'm quite proud of what I've accomplished, but after assessing and comparing my work to what's been done in the industry and what's available on Unity's Asset Store, I don't feel comfortable charging money for my work. There are some limitations to my tech, and not being aquainted with Unity's GUI API, the user interface is rough. That being said, what I have is definitely workable, and I sincerely hope that my tech provides a useful solution to the development of your game. :)

---PREFABS---

1. Snow Deformation Manager

The Snow Deformation Manager is the control panel of the snow deformation, and is where you can fine tune the deformation settings.

[Setup]
Snow Deformation Model: The SnowDeformationModule prefab goes here.
Object Layer: The layer at which objects that can deform the snow operate on.
Ground Layer: The layer at which the deformable mesh operates on.

[Deformation Settings]
Displacement Map: Allows you to predeform the snow. Make sure the map is Single Channel (Red) for best results.
Displacement: Controls how tall the snow is.
Tessellation Edge Length: Controls how much the mesh can be tessellated. The higher the number, the less tessellation.
Accuracy In Meters: Controls the size of the deformation textures. The higher the number, the smaller the texture. Note that this impacts the quality of deformation as well as performance.
Down Sample Mode: Down samples the deformation texture. Helps smooth out the deformation map.
Blur Iterations: Controls how many gaussian blur passes the deformation texture is sibject too. Gives the deformation softer edges

[Snowfall]
Snowfall Enabled: Let's you turn snowfall on or off.
Flake Amount: Simulates the amount of flakes hitting the snow
Flake Strength: Controls how much snow each flake has

[Shaders]
Snow Shader: Custom/Snow goes here.
Blur Shader: Hidden/GaussianDepthBlur goes here.
Normalize Shader: Hidden/NormalizeDepthMaps goes here.
Snowfall Shader: Hidden/Snowfall goes here.

[Texture]
Snow: The texture applied to undeformed snow.
Snow Color: The color of the Snow texture.
Ground: The texture applied to deformed snow.
Ground Color: The color of the Ground texture.
Normal Map: The normal map of the Snow texture.
Bump Scale: The bump scale of the normal map.
Metallic: Controls how metallic the snow looks.
Smoothness: Controls how smooth the snow looks.
Detail: Secondary snow texture.
Detail Normals: Secondary normal map.
Detail Bump Scale: The bump scale of the secondary snow texture.

2. Snow Mesh Generator

The Snow Mesh Generator is used to generate meshes compatible with the deformation pipeline from height maps.

[Height Map Settings]
Height Map: The height map used to generate the mesh. Make sure the map is Single Channel (Red) for best results.
Blur Shader: Hidden/GaussianTextureBlur goes here.
Blur Iterations: Controls how manny gaussian blur passes the height map is subjected to.
Down Sample Mode: Allows you to change the resolution of the height map.
Invert Map: Inverts the height map. Peaks become valleys, and valleys become peaks.

[Mesh Generation]
Basic Material: The material applied to the mesh on generation.
Height Scale: The scale of the height value when sampling the height map.
Mesh Width: Width in vertices.
Mesh Length: Length in vertices.
Vertex Distance: The distance between each vertex.

[Level of Detail]
Create Tile LOD: Toggles whether or not LODs are created.
LOD Bias: Controls the swapping bias of the LODs.
LOD Quality: The mesh quality of each LOD.

[Mesh Divide]
Divisions: Controls how many times the mesh is divided. Useful for compartmentallizing the deformation of a large, single mesh to free up GPU rendering time.
Convex Mesh Colliders: Toggles whether or not each mesh division has a convex mesh collider.
Physic Mat: The physic material applied to each mesh division.

3. SnowDeformationModule

This prefab is utilized by the Snow Deformation Manager and allows no customization options.

---RECOMMENDED WORK FLOW---

1. Place a Snow Mesh Generator in your scene.

2. Use the Snow Mesh Generator to either create a large deformation area, or to push out smaller tiles to be used sparingly on your level.

3. Add a Layer called "SnowInteract".

4. Add a layer called "Ground".

5. Add a tag called "Tile".

6. Change the layer of skinned meshes you want to deform the snow to "SnowInteract".

7. Place a Snow Deformation Manager in the scene.

8. Set the Object and Ground Layer to the appropriate layer numbers

9. Fine tune the settings to your liking.

10. Hit play!

---KNOWN ISSUES---

1. Baked lights are not compatible with the snow shader.

2. Baked shadows are not compatible with the snow shader.

3. Light probes are not compatible with the snow shader.

4. If the initial vertices of the mesh that will be used for deformation are not close enough together, the mesh will break upon deformation.

---QUESTIONS, COMMENTS, OR SUGGESTIONS---

If you have any questions, comments, or suggestions, you can reach me on these platforms:

Twitter: @Mr_Admirals
Reddit: u/Mr_Admirals